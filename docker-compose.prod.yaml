x-app: &app
  env_file:
    - ./.env
  restart: always
  platform: linux/amd64

services:
  postgres:
    image: postgres:14
    container_name: report-postgres
    <<: *app
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'",
        ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    environment:
      TZ: "Europe/Moscow"
      PGTZ: "Europe/Moscow"

  redis:
    image: redis:6
    container_name: report-redis
    <<: *app
    ports:
      - "6379:6379"
    volumes:
      - redis_volume:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    image: aleksioprime/progress-report-app:latest
    container_name: report-app
    <<: *app
    ports:
      - "8123:8000"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy

  front:
    image: aleksioprime/progress-report-front:latest
    container_name: report-front
    <<: *app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt/live/repgen.ru/fullchain.pem:/etc/nginx/ssl/fullchain.pem
      - /etc/letsencrypt/live/repgen.ru/privkey.pem:/etc/nginx/ssl/privkey.pem
      - /etc/letsencrypt/live/repgen.ru/chain.pem:/etc/nginx/ssl/chain.pem
      - /root/repgen/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - certbot_challenges:/var/www/certbot
    depends_on:
      app:
        condition: service_started

  ollama:
    image: ollama/ollama
    container_name: report-ollama
    <<: *app
    ports:
      - "11434:11434"
    volumes:
      - ./ollama:/root/.ollama

  watchtower:
    image: containrrr/watchtower
    container_name: report-watchtower
    <<: *app
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30 --cleanup

  certbot:
    image: certbot/certbot
    container_name: report-certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
      - certbot_challenges:/var/www/certbot
    depends_on:
      front:
        condition: service_healthy
    entrypoint: sh -c "sleep 5 && certbot certonly --webroot -w /var/www/certbot --email aleksioprime@gmail.com --agree-tos --no-eff-email --staple-ocsp -d repgen.ru -d www.repgen.ru && sleep 999999999"

  certbot-renew:
    image: certbot/certbot
    container_name: report-certbot-renew
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
    entrypoint: sh -c "while true; do certbot renew --quiet && sleep 12h; done"


volumes:
  postgres_volume:
  redis_volume:
  certbot_challenges: